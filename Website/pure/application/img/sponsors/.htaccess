
ErrorDocument 404 /error.php

AddType video/ogg .ogv
AddType video/mp4 .mp4
AddType video/webm .webm


# Requires mod_expires to be enabled.
<IfModule mod_expires.c>
	# Enable expirations.
	ExpiresActive On

	# Cache all files for 2 weeks after access (A).
	ExpiresDefault A1209600

    ExpiresByType text/html "access plus 2 days"
	ExpiresByType text/php "access plus 2 days"
    ExpiresByType image/gif "access plus 60 days"
    ExpiresByType image/jpg "access plus 60 days"
	ExpiresByType image/jpeg "access plus 60 days"
    ExpiresByType image/png "access plus 60 days"
    ExpiresByType application/x-javascript "access plus 60 days"
    ExpiresByType text/css "access plus 60 days"
    ExpiresByType image/x-icon "access plus 360 days"
</IfModule>

# 480 weeks
<FilesMatch "\.(ico|pdf|flv|jpg|jpeg|png|gif|js|css|swf)$">
    Header set Cache-Control "max-age=290304000, public"
</FilesMatch>
# cache html/htm/xml/txt diles for 2 days
<FilesMatch "\.(html|htm|xml|txt|xsl)$">
  Header set Cache-Control "max-age=7200, must-revalidate"
</FilesMatch>


# Various rewrite rules.
<IfModule mod_rewrite.c>
	RewriteEngine on
  
	# To redirect all users to access the site WITH the 'www.' prefix,
	# (http://example.com/... will be redirected to http://www.example.com/...)
	# uncomment the following:
	RewriteCond %{HTTP_HOST} !^www\. [NC]
	RewriteRule ^ http://www.%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
	
	
	# Pass all requests not referring directly to files in the filesystem to
	# index.php. Clean URLs are handled in drupal_environment_initialize().
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteCond %{REQUEST_FILENAME} !-d
	RewriteCond %{REQUEST_URI} !=/favicon.ico
	RewriteRule ^ index.php [L]
	
	# Rules to correctly serve gzip compressed CSS and JS files.
	# Requires both mod_rewrite and mod_headers to be enabled.
	<IfModule mod_headers.c>
		# Serve gzip compressed CSS files if they exist and the client accepts gzip.
		RewriteCond %{HTTP:Accept-encoding} gzip
		RewriteCond %{REQUEST_FILENAME}\.gz -s
		RewriteRule ^(.*)\.css $1\.css\.gz [QSA]

		# Serve gzip compressed JS files if they exist and the client accepts gzip.
		RewriteCond %{HTTP:Accept-encoding} gzip
		RewriteCond %{REQUEST_FILENAME}\.gz -s
		RewriteRule ^(.*)\.js $1\.js\.gz [QSA]

		# Serve correct content types, and prevent mod_deflate double gzip.
		RewriteRule \.css\.gz$ - [T=text/css,E=no-gzip:1]
		RewriteRule \.js\.gz$ - [T=text/javascript,E=no-gzip:1]

		<FilesMatch "(\.js\.gz|\.css\.gz)$">
		# Serve correct encoding type.
		Header set Content-Encoding gzip
		# Force proxies to cache gzipped & non-gzipped css/js files separately.
		Header append Vary Accept-Encoding
		</FilesMatch>
	</IfModule>
</IfModule>

# compress text, html, javascript, css, xml:
AddOutputFilterByType DEFLATE text/plain
AddOutputFilterByType DEFLATE text/html
AddOutputFilterByType DEFLATE text/xml
AddOutputFilterByType DEFLATE text/css
AddOutputFilterByType DEFLATE application/xml
AddOutputFilterByType DEFLATE application/xhtml+xml
AddOutputFilterByType DEFLATE application/rss+xml
AddOutputFilterByType DEFLATE application/javascript
AddOutputFilterByType DEFLATE application/x-javascript